{"library":{"streets_Asphalt":{"class":"Material","data":{"defines":{},"parameters":{"WorldViewProjectionMatrix":{"type":"Matrix4","data":[-0.4028138816356659,0,0,0,0,1.9209821224212646,0,0,0,0,1.0002000331878662,1,0,-0.5762946605682373,2.8005800247192383,3]},"texture":{"type":"Texture","data":{"width":1024,"height":768,"minFilter":6,"type":1,"wrapS":3,"wrapT":3,"origin":2,"source":"resources/city/asphalt.png"}},"WorldViewMatrix":{"type":"Matrix4","data":[-1,0,0,0,0,1,0,0,0,0,-1,0,0,-0.2999999523162842,-3,1]}},"engineParameters":{"WorldViewProjectionMatrix":null,"WorldViewMatrix":null},"shader":"texturedShader","name":"streets_Asphalt","vertexShader":"attribute vec3 Position;attribute vec3 Normal;attribute vec2 UVCoord;varying vec2 fragUVCoord;varying vec4 position;varying vec4 projectedPosition;varying vec3 N;uniform mat4 WorldViewProjectionMatrix;uniform mat4 WorldViewMatrix;void main() {position = WorldViewMatrix * vec4( Position, 1.0 );    gl_Position = WorldViewProjectionMatrix * vec4( Position, 1.0 );    fragUVCoord = UVCoord;        mat3 foo = mat3( WorldViewMatrix[ 0 ].xyz, WorldViewMatrix[ 1 ].xyz, WorldViewMatrix[ 2 ].xyz );    N = foo * Normal;}","fragmentShader":"precision highp float;varying vec2 fragUVCoord;varying vec4 position;varying vec4 projectedPosition;varying vec3 N;uniform sampler2D texture; void main() { vec3 lightColor = texture2D( texture, fragUVCoord ).xyz; vec3 normal = normalize( N );vec3 L = normalize( position.xyz );vec3 eye = normalize( position.xyz - vec3( 0.0, 0.0, 5.0 ) );    float fogGradientHeight = 20.0;    vec3 fogColor = vec3(        clamp( position.y / fogGradientHeight, 0.0, 1.0 ) * 0.0 / 255.0,        clamp( position.y / fogGradientHeight, 0.0, 1.0 ) * 0.0 / 255.0,        clamp( position.y / fogGradientHeight, 0.0, 1.0 ) * 0.0 / 255.0    ) + vec3(        clamp( 1.0 - position.y / fogGradientHeight, 0.0, 1.0 ) * 0.0 / 255.0,        clamp( 1.0 - position.y / fogGradientHeight, 0.0, 1.0 ) * 0.0 / 255.0,        clamp( 1.0 - position.y / fogGradientHeight, 0.0, 1.0 ) * 0.0 / 255.0    );    float fogPortion = -position.z /70.0;    fogPortion = clamp( fogPortion, 0.0, 1.0 );float diffuse = max( dot( -normal, L ), 0.0 );vec3 diffuseResult = diffuse * lightColor;    gl_FragColor = vec4( diffuseResult, 1.0 );}"}}},"object":"streets_Asphalt"}