(function(d){var j=d.Vector3DUtil;var f=d.JConfig;var k=d.JIndexedTriangle;var g=d.JSphere;var e=d.JTriangle;var c=d.JTriangleMesh;var a=d.JNumber3D;var b=d.MaterialProperties;var l=d.RigidBody;var h=d.CollPointInfo;var i=function(){this.name="SphereMesh";this.type0="SPHERE";this.type1="TRIANGLEMESH";};d.extend(i,d.CollDetectFunctor);i.prototype.collDetectSphereStaticMeshOverlap=function(u,o,K,x,G){var L=K.body0.get_oldState().position;var p=K.body1.get_oldState().position;var q=x+u.get_radius();var D=q*q;var H=[0,0,0];var C=[];var y=[];var s=o.get_octree().getTrianglesIntersectingtAABox(y,u.get_boundingBox());if(!s){return;}var I,r,O,A,N,t=a.NUM_TINY;var m;var w;var n;var F;for(var E=0;E<s;++E){m=o.get_octree().getTriangle(y[E]);r=m.get_plane().pointPlaneDistance(u.get_currentState().position);if(r<=0){continue;}if(r>=q){continue;}w=m.get_vertexIndices();F=new e(o.get_octree().getVertex(w[0]),o.get_octree().getVertex(w[1]),o.get_octree().getVertex(w[2]));n=[];I=F.pointTriangleDistanceSq(n,u.get_currentState().position);if(I<D){O=F.pointTriangleDistanceSq(n,u.get_oldState().position);A=Math.sqrt(O);N=u.get_radius()-A;var M=(A>t)?(j.subtract(u.get_oldState().position,F.getPoint(n[0],n[1]))):F.get_normal().slice(0);j.normalize(M);var z=j.subtract(u.get_oldState().position,a.getScaleVector(M,u.get_radius()));var v=new h();v.r0=j.subtract(z,L);v.r1=j.subtract(z,p);v.initialPenetration=N;C.push(v);H=j.add(H,M);j.normalize(H);}}var B=new d.CollisionInfo();B.objInfo=K;B.dirToBody=H;B.pointInfo=C;var J=new b();J.set_restitution(0.5*(u.get_material().get_restitution()+o.get_material().get_restitution()));J.set_friction(0.5*(u.get_material().get_friction()+o.get_material().get_friction()));B.mat=J;G.push(B);K.body0.collisions.push(B);K.body1.collisions.push(B);};i.prototype.collDetect=function(p,o){var m;if(p.body0._type=="TRIANGLEMESH"){m=p.body0;p.body0=p.body1;p.body1=m;}var n=p.body0;var q=p.body1;this.collDetectSphereStaticMeshOverlap(n,q,p,f.collToll,o);};d.CollDetectSphereMesh=i;})(jigLib);