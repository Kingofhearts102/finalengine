(function(d){var k=d.Vector3DUtil;var a=d.JNumber3D;var f=d.JMatrix3D;var h=d.JOctree;var i=d.CollOutData;var l=d.TriangleVertexIndices;var b=d.PhysicsState;var m=d.RigidBody;var g=d.ISkin3D;var e=d.JTriangle;var c=function(p,o,n){this.Super(p);if(o==undefined){o=20;}if(n==undefined){n=1;}this._maxTrianglesPerCell=o;this._minCellSize=n;this.set_movable(false);if(p){this._skinVertices=p.vertices;this.createMesh(this._skinVertices,p.indices);this._boundingBox=this._octree.boundingBox().clone();this._boundingSphere=this._boundingBox.getRadiusAboutCentre();}this._type="TRIANGLEMESH";};d.extend(c,d.RigidBody);c.prototype.createMesh=function(q,u){this._skinVertices=q;var n=q.length;var t=[];var p=f.getTranslationMatrix(this.get_currentState().position[0],this.get_currentState().position[1],this.get_currentState().position[2]);p=f.getAppendMatrix3D(this.get_currentState().get_orientation(),p);var r=0;for(var o=0;o<q.length;o++){var s=q[o].slice(0);t[r++]=p.transformVector(s);}this._octree=new h();this._octree.addTriangles(t,t.length,u,u.length);this._octree.buildOctree(this._maxTrianglesPerCell,this._minCellSize);};c.prototype.get_octree=function(){return this._octree;};c.prototype.segmentIntersect=function(q,r,n){var p=[];var o=this._octree.getTrianglesIntersectingSegment(p,r);var u=a.NUM_HUGE;for(var t=0;t<o;t++){var s=p[t];var v=new e(this._octree.getVertex(s.getVertexIndex(0)),this._octree.getVertex(s.getVertexIndex(1)),this._octree.getVertex(s.getVertexIndex(2)));if(v.segmentTriangleIntersection(q,r)){if(q.frac<u){u=q.frac;q.position=r.getPoint(u);q.normal=s.get_plane().normal;}}}q.frac=u;if(u<a.NUM_HUGE){return true;}else{return false;}};c.prototype.updateState=function(){this.Super.prototype.updateState.call(this);var n=this._skinVertices.length;var r=[];var o=f.getTranslationMatrix(this.get_currentState().position[0],this.get_currentState().position[1],this.get_currentState().position[2]);o=f.getAppendMatrix3D(this.get_currentState().get_orientation(),o);var p=0;for(j=0;j<this._skinVertices.length;j++){var q=this._skinVertices[j].slice(0);r[p++]=o.transformVector(q);}this._octree.updateTriangles(r);this._octree.buildOctree(this._maxTrianglesPerCell,this._minCellSize);this._boundingBox=this._octree.boundingBox().clone();};d.JTriangleMesh=c;})(jigLib);