(function(b){var i=b.Vector3DUtil;var a=b.JNumber3D;var d=b.EdgeData;var j=b.JIndexedTriangle;var c=b.JTriangle;var k=b.JSegment;var g=b.OctreeCell;var h=b.TriangleVertexIndices;var f=b.JAABox;var e=function(){this._testCounter=0;this._cells=[];this._vertices=[];this._triangles=[];this._cellsToTest=[];this._boundingBox=new f();};e.prototype.get_trianglesData=function(){return this._triangles;};e.prototype.getTriangle=function(l){return this._triangles[l];};e.prototype.get_verticesData=function(){return this._vertices;};e.prototype.getVertex=function(l){return this._vertices[l];};e.prototype.boundingBox=function(){return this._boundingBox;};e.prototype.clear=function(){this._cells=[];this._vertices=[];this._triangles=[];};e.prototype.addTriangles=function(v,w,t,m){this.clear();this._vertices=v.slice(0);var o,l=a.NUM_TINY;var r,q,p;var y,x,u;var n;for(var s=0;s<t.length;s++){var z=t[s];var r=t[s][0];var q=t[s][1];var p=t[s][2];y=i.subtract(v[q],v[r]);x=i.subtract(v[p],v[r]);u=i.crossProduct(y,x);o=i.get_length(u);if(o>l){n=new j();n.setVertexIndices(r,q,p,this._vertices);this._triangles.push(n);}}};e.prototype.buildOctree=function(s,m){this._boundingBox.clear();for(var o=0;o<this._vertices.length;o++){var t=this._vertices[o];this._boundingBox.addPoint(t);}this._cells=[];this._cells.push(new g(this._boundingBox));var l=this._triangles.length;for(var o=0;o<l;o++){this._cells[0].triangleIndices[o]=o;}var u=[];u.push(0);var q;var r;var p;while(u.length!=0){r=u.pop();if(this._cells[r].triangleIndices.length<=s||this._cells[r].AABox.getRadiusAboutCentre()<m){continue;}for(var o=0;o<g.NUM_CHILDREN;o++){this._cells[r].childCellIndices[o]=this._cells.length;u.push(this._cells.length);this._cells.push(new g(this.createAABox(this._cells[r].AABox,o)));p=this._cells[this._cells.length-1];l=this._cells[r].triangleIndices.length;for(var n=0;n<l;n++){q=this._cells[r].triangleIndices[n];if(this.doesTriangleIntersectCell(this._triangles[q],p)){p.triangleIndices.push(q);}}}this._cells[r].triangleIndices=[];}};e.prototype.updateTriangles=function(l){this._vertices=l.slice(0);for(var m=0;m<this._triangles.length;m++){var n=this._triangles[m];n.updateVertexIndices(this._vertices);}};e.prototype.getTrianglesIntersectingSegment=function(q,m){if(this._cells.length==0){return 0;}this._cellsToTest=[];this._cellsToTest.push(0);var o,n,l,r;this.incrementTestCounter();while(this._cellsToTest.length!=0){o=this._cellsToTest.pop();l=this._cells[o];if(!l.AABox.segmentAABoxOverlap(m)){continue;}if(l.isLeaf()){n=l.triangleIndices.length;for(var p=0;p<n;p++){r=this.getTriangle(l.triangleIndices[p]);if(r.counter!=this._testCounter){r.counter=this._testCounter;if(r.get_boundingBox().segmentAABoxOverlap(m)){q.push(r);}}}}else{for(var p=0;p<g.NUM_CHILDREN;p++){this._cellsToTest.push(l.childCellIndices[p]);}}}return q.length;};e.prototype.getTrianglesIntersectingtAABox=function(q,m){if(this._cells.length==0){return 0;}this._cellsToTest=[];this._cellsToTest.push(0);this.incrementTestCounter();var o,n,l,r;while(this._cellsToTest.length!=0){o=this._cellsToTest.pop();l=this._cells[o];if(!m.overlapTest(l.AABox)){continue;}if(l.isLeaf()){n=l.triangleIndices.length;for(var p=0;p<n;p++){r=this.getTriangle(l.triangleIndices[p]);if(r.counter!=this._testCounter){r.counter=this._testCounter;if(m.overlapTest(r.get_boundingBox())){q.push(l.triangleIndices[p]);}}}}else{for(var p=0;p<g.NUM_CHILDREN;p++){this._cellsToTest.push(l.childCellIndices[p]);}}}return q.length;};e.prototype.dumpStats=function(){var m=0,p,n,l;var q=[];q.push(0);while(q.length!=0){n=q.pop();l=l[n];if(l.isLeaf()){p=l.triangleIndices.length;if(p>m){m=p;}}else{for(var o=0;o<g.NUM_CHILDREN;o++){if((l.childCellIndices[o]>=0)&&(l.childCellIndices[o]<this._cells.length)){q.push(l.childCellIndices[o]);}}}}};e.prototype.createAABox=function(m,n){var p=a.getScaleVector(i.subtract(m.get_maxPos(),m.get_minPos()),0.5);var o;switch(n){case 0:o=[1,1,1];break;case 1:o=[1,1,0];break;case 2:o=[1,0,1];break;case 3:o=[1,0,0];break;case 4:o=[0,1,1];break;case 5:o=[0,1,0];break;case 6:o=[0,0,1];break;case 7:o=[0,0,0];break;default:o=[0,0,0];break;}var l=new f();l.set_minPos(i.add(m.get_minPos(),[o[0]*p[0],o[1]*p[1],o[2]*p[2]]));l.set_maxPos(i.add(l.get_minPos(),p));i.scaleBy(p,0.00001);l.set_minPos(i.subtract(l.get_minPos(),p));l.set_maxPos(i.add(l.get_maxPos(),p));return l;};e.prototype.doesTriangleIntersectCell=function(p,r){if(!p.get_boundingBox().overlapTest(r.AABox)){return false;}if(r.AABox.isPointInside(this.getVertex(p.getVertexIndex(0)))||r.AABox.isPointInside(this.getVertex(p.getVertexIndex(1)))||r.AABox.isPointInside(this.getVertex(p.getVertexIndex(2)))){return true;}var t=new c(this.getVertex(p.getVertexIndex(0)),this.getVertex(p.getVertexIndex(1)),this.getVertex(p.getVertexIndex(2)));var l;var n;var m=r.get_egdes();var u=r.get_points();for(var o=0;o<12;o++){l=m[o];n=new k(u[l.ind0],i.subtract(u[l.ind1],u[l.ind0]));if(t.segmentTriangleIntersection({},n)){return true;}}var s;var q;for(o=0;o<3;o++){s=t.getVertex(o);q=t.getVertex((o+1)%3);if(r.AABox.segmentAABoxOverlap(new k(s,i.subtract(q,s)))){return true;}}return false;};e.prototype.incrementTestCounter=function(){++this._testCounter;if(this._testCounter==0){var m=this._triangles.length;for(var l=0;l<m;l++){this._triangles[l].counter=0;}this._testCounter=1;}};b.JOctree=e;})(jigLib);